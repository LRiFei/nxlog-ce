<?xml version="1.0" encoding="UTF-8"?>
<section id="xm_exec_funcproc"><title>Functions and procedures exported by xm_exec</title>

<section id="xm_exec_procedures"><title>Procedures exported by xm_exec</title>
  <variablelist>
   <varlistentry>
     <term>
       <anchor id="xm_exec_proc_exec"/>
       <function>exec(string command, varargs args);</function>
     </term>
     <listitem>
      <variablelist>
        <varlistentry>
         <term>description</term>
         <listitem>
          <simpara>
       Execute the command passing it the supplied arguments and wait for it to terminate.
       The command is executed in the caller module's context.
       Note that the module calling this procedure will block until the process terminates. 
       Use the exec_async() procedure to avoid this problem.
       All output written to STDOUT and STDERR by the spawned process is discarded.
     </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
          <term>arguments</term>
          <listitem>
           <variablelist>
            <varlistentry>
             <term>command</term>
             <listitem>
               <simpara>
                type: <link linkend="lang_type_string">string</link>
               </simpara>
             </listitem>
            </varlistentry>
            <varlistentry>
             <term>args</term>
             <listitem>
               <simpara>
                type: <link linkend="lang_type_varargs">varargs</link>
               </simpara>
             </listitem>
            </varlistentry>
           </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
     </listitem>
   </varlistentry>

   <varlistentry>
     <term>
       <anchor id="xm_exec_proc_exec_async"/>
       <function>exec_async(string command, varargs args);</function>
     </term>
     <listitem>
      <variablelist>
        <varlistentry>
         <term>description</term>
         <listitem>
          <simpara>
       This procedure executes the command passing it the supplied arguments and does not
       wait for it to terminate. 
     </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
          <term>arguments</term>
          <listitem>
           <variablelist>
            <varlistentry>
             <term>command</term>
             <listitem>
               <simpara>
                type: <link linkend="lang_type_string">string</link>
               </simpara>
             </listitem>
            </varlistentry>
            <varlistentry>
             <term>args</term>
             <listitem>
               <simpara>
                type: <link linkend="lang_type_varargs">varargs</link>
               </simpara>
             </listitem>
            </varlistentry>
           </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
     </listitem>
   </varlistentry>

  </variablelist>
</section>
</section>
